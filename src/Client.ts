/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "./core";
import { Client as AccountingClient } from "./api/resources/accounting/client/Client";
import { Client as ApplicantsClient } from "./api/resources/applicants/client/Client";
import { Client as LeadsClient } from "./api/resources/leads/client/Client";
import { Client as LeasesClient } from "./api/resources/leases/client/Client";
import { Client as ListingsClient } from "./api/resources/listings/client/Client";
import { Client as PropertiesClient } from "./api/resources/properties/client/Client";
import { Client as RentPaymentHistoryClient } from "./api/resources/rentPaymentHistory/client/Client";
import { Client as ResidentsClient } from "./api/resources/residents/client/Client";
import { Client as UnitPricingClient } from "./api/resources/unitPricing/client/Client";
import { Client as UnitsClient } from "./api/resources/units/client/Client";
import { Client as VendorsClient } from "./api/resources/vendors/client/Client";
import { Client as WorkOrdersClient } from "./api/resources/workOrders/client/Client";

export declare namespace PropifyApiClient {
    interface Options {
        environment: string;
        propifyApiSecret?: core.Supplier<string>;
        propifyApiKey: string;
    }
}

export class PropifyApiClient {
    constructor(private readonly options: PropifyApiClient.Options) {}

    #accounting: AccountingClient | undefined;

    public get accounting(): AccountingClient {
        return (this.#accounting ??= new AccountingClient(this.options));
    }

    #applicants: ApplicantsClient | undefined;

    public get applicants(): ApplicantsClient {
        return (this.#applicants ??= new ApplicantsClient(this.options));
    }

    #leads: LeadsClient | undefined;

    public get leads(): LeadsClient {
        return (this.#leads ??= new LeadsClient(this.options));
    }

    #leases: LeasesClient | undefined;

    public get leases(): LeasesClient {
        return (this.#leases ??= new LeasesClient(this.options));
    }

    #listings: ListingsClient | undefined;

    public get listings(): ListingsClient {
        return (this.#listings ??= new ListingsClient(this.options));
    }

    #properties: PropertiesClient | undefined;

    public get properties(): PropertiesClient {
        return (this.#properties ??= new PropertiesClient(this.options));
    }

    #rentPaymentHistory: RentPaymentHistoryClient | undefined;

    public get rentPaymentHistory(): RentPaymentHistoryClient {
        return (this.#rentPaymentHistory ??= new RentPaymentHistoryClient(this.options));
    }

    #residents: ResidentsClient | undefined;

    public get residents(): ResidentsClient {
        return (this.#residents ??= new ResidentsClient(this.options));
    }

    #unitPricing: UnitPricingClient | undefined;

    public get unitPricing(): UnitPricingClient {
        return (this.#unitPricing ??= new UnitPricingClient(this.options));
    }

    #units: UnitsClient | undefined;

    public get units(): UnitsClient {
        return (this.#units ??= new UnitsClient(this.options));
    }

    #vendors: VendorsClient | undefined;

    public get vendors(): VendorsClient {
        return (this.#vendors ??= new VendorsClient(this.options));
    }

    #workOrders: WorkOrdersClient | undefined;

    public get workOrders(): WorkOrdersClient {
        return (this.#workOrders ??= new WorkOrdersClient(this.options));
    }
}
