/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { PropifyApi } from "@fern-api/propify";
import * as core from "../../../../core";

export const Lease: core.serialization.ObjectSchema<serializers.Lease.Raw, PropifyApi.Lease> =
    core.serialization.object({
        id: core.serialization.lazy(async () => (await import("../../..")).ResidentId),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date()),
        xId: core.serialization.property("x_id", core.serialization.string()),
        xPropertyId: core.serialization.property("x_property_id", core.serialization.string().optional()),
        xResidentId: core.serialization.property("x_resident_id", core.serialization.string().optional()),
        xUnitId: core.serialization.property("x_unit_id", core.serialization.string().optional()),
        rentAmountInCents: core.serialization.property("rent_amount_in_cents", core.serialization.number().optional()),
        rentDueDay: core.serialization.property("rent_due_day", core.serialization.number().optional()),
        depositAmount: core.serialization.property("deposit_amount", core.serialization.string().optional()),
        depositAmountAmountInCents: core.serialization.property(
            "deposit_amount_amount_in_cents",
            core.serialization.number().optional()
        ),
        depositDate: core.serialization.property("deposit_date", core.serialization.date().optional()),
        signatureDate: core.serialization.property("signature_date", core.serialization.date().optional()),
        startDate: core.serialization.property("start_date", core.serialization.date().optional()),
        endDate: core.serialization.property("end_date", core.serialization.date().optional()),
        applicationDate: core.serialization.property("application_date", core.serialization.date().optional()),
        scheduledMoveInDate: core.serialization.property(
            "scheduled_move_in_date",
            core.serialization.date().optional()
        ),
        scheduledMoveOutDate: core.serialization.property(
            "scheduled_move_out_date",
            core.serialization.date().optional()
        ),
        realizedMoveInDate: core.serialization.property("realized_move_in_date", core.serialization.date().optional()),
        realizedMoveOutDate: core.serialization.property(
            "realized_move_out_date",
            core.serialization.date().optional()
        ),
        status: core.serialization.string().optional(),
        type: core.serialization.string().optional(),
        integrationVendor: core.serialization.property("integration_vendor", core.serialization.string()),
    });

export declare namespace Lease {
    interface Raw {
        id: serializers.ResidentId.Raw;
        created_at: string;
        updated_at: string;
        x_id: string;
        x_property_id?: string | null;
        x_resident_id?: string | null;
        x_unit_id?: string | null;
        rent_amount_in_cents?: number | null;
        rent_due_day?: number | null;
        deposit_amount?: string | null;
        deposit_amount_amount_in_cents?: number | null;
        deposit_date?: string | null;
        signature_date?: string | null;
        start_date?: string | null;
        end_date?: string | null;
        application_date?: string | null;
        scheduled_move_in_date?: string | null;
        scheduled_move_out_date?: string | null;
        realized_move_in_date?: string | null;
        realized_move_out_date?: string | null;
        status?: string | null;
        type?: string | null;
        integration_vendor: string;
    }
}
