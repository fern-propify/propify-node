/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { PropifyApi } from "@fern-api/propify";
import * as core from "../../../../core";

export const Unit: core.serialization.ObjectSchema<serializers.Unit.Raw, PropifyApi.Unit> = core.serialization.object({
    id: core.serialization.string(),
    createdAt: core.serialization.property("created_at", core.serialization.string()),
    updatedAt: core.serialization.property("updated_at", core.serialization.string()),
    xId: core.serialization.property("x_id", core.serialization.string()),
    xPropertyId: core.serialization.property("x_property_id", core.serialization.string()),
    number: core.serialization.string().optional(),
    bedrooms: core.serialization.string().optional(),
    bathrooms: core.serialization.string().optional(),
    squareFeet: core.serialization.property("square_feet", core.serialization.number().optional()),
    buildingNumber: core.serialization.property("building_number", core.serialization.string().optional()),
    buildingName: core.serialization.property("building_name", core.serialization.string().optional()),
    floorPlanCode: core.serialization.property("floor_plan_code", core.serialization.string().optional()),
    floorPlanName: core.serialization.property("floor_plan_name", core.serialization.string().optional()),
    streetAddress1: core.serialization.property("street_address_1", core.serialization.string().optional()),
    streetAddress2: core.serialization.property("street_address_2", core.serialization.string().optional()),
    city: core.serialization.string().optional(),
    state: core.serialization.string().optional(),
    zip: core.serialization.string().optional(),
    rentAmountMarketInCents: core.serialization.property(
        "rent_amount_market_in_cents",
        core.serialization.number().optional()
    ),
    rentAmountMinInCents: core.serialization.property(
        "rent_amount_min_in_cents",
        core.serialization.number().optional()
    ),
    rentAmountMaxInCents: core.serialization.property(
        "rent_amount_max_in_cents",
        core.serialization.number().optional()
    ),
    isAvailable: core.serialization.property("is_available", core.serialization.boolean().optional()),
    isFurnished: core.serialization.property("is_furnished", core.serialization.boolean().optional()),
    isListed: core.serialization.property("is_listed", core.serialization.boolean().optional()),
    isVacant: core.serialization.property("is_vacant", core.serialization.boolean().optional()),
    integrationVendor: core.serialization.property("integration_vendor", core.serialization.string()),
});

export declare namespace Unit {
    interface Raw {
        id: string;
        created_at: string;
        updated_at: string;
        x_id: string;
        x_property_id: string;
        number?: string | null;
        bedrooms?: string | null;
        bathrooms?: string | null;
        square_feet?: number | null;
        building_number?: string | null;
        building_name?: string | null;
        floor_plan_code?: string | null;
        floor_plan_name?: string | null;
        street_address_1?: string | null;
        street_address_2?: string | null;
        city?: string | null;
        state?: string | null;
        zip?: string | null;
        rent_amount_market_in_cents?: number | null;
        rent_amount_min_in_cents?: number | null;
        rent_amount_max_in_cents?: number | null;
        is_available?: boolean | null;
        is_furnished?: boolean | null;
        is_listed?: boolean | null;
        is_vacant?: boolean | null;
        integration_vendor: string;
    }
}
